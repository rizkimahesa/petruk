Tulis sebuah fungsi int max_of_four(int a, int b, int c, int d) yang mengembalikan maksimum dari empat argumen yang diterimanya.

For example:

Test	Input	Result
1) int a=3,b=1,c=4,d=0;
cout<<max_of_four(a, b, c, d);
int a=3,b=1,c=4,d=0;
cout<<max_of_four(a, b, c, d);
result: 4
jawaban:
int max_of_four(int a, int b, int c, int d) {
    int max_ab = (a > b) ? a : b;
    int max_cd = (c > d) ? c : d;
    return (max_ab > max_cd) ? max_ab : max_cd;
}

2) Buat program untuk membaca input dari keyboard. Data inputan ditampung ke dalam tipe variabel yang sesuai.
Format Input
Terdiri dari 5 input data a b c d e, yang masing-masing merupakan data dengan tipe integer, long, char, float dan double

Format Output
Cetak tiap elemen  pada baris baru dengan urutan yang sama dengan input.
Catatan: untuk nilai float dicetak hingga 3 tempat desimal, dan untuk nilai double dicetak hingga 9 tempat desimal.
For example:
Test	Input	Result
tc01
3 12345678912345 a 334.23 14049.30493
3
12345678912345
a
334.230
14049.304930000

#include <iostream>
#include <iomanip>
using namespace std;

int main() {
   int a;
   long b;
   char c;
   float d;
   double e;

   cin >> a >> b >> c >> d >> e;

   cout << a << endl;
   cout << b << endl;
   cout << c << endl;
   cout << fixed << setprecision(3) << d << endl;
   cout << fixed << setprecision(9) << e << endl;

   return 0;
}

Task
Read  numbers from stdin and print their sum to stdout.

Input Format
One line that contains  space-separated integers: a, b, and c.

Constraints
1 < a,b,c <1000

Output Format
Print the sum of the three numbers on a single line.
Test	Input	Result
tc01
1 1 1
3

#include <iostream>
using namespace std;

int main() {
    int a, b, c;
    cin >> a;
    cin >> b;
    cin >> c;

    int sum = a + b + c;
    cout << sum << endl;

    return 0;
}

Buat sebuah fungsi  tanpa return dengan nama bilangan , dimana parameter fungsi berupa sebuah bilangan positif n, fungsi dapat melakukan :
jika 1 < n < 9, cetak dalam huruf kecil angka yang diberikan (misal satu, dua, tiga, dst)
jika n> 9, cetak Lebih dari 9
jawab
#include<iostream>
using namespace std;

void bilangan(int n) {
    
    if(n >= 9) {
        cout<<"Lebih dari 9" << endl;
    } else {
        if(n == 1){
            cout<<"satu" << endl;
        }
        else if(n == 2) {
            cout<<"dua" << endl;
        }
        else if(n == 3) {
            cout<<"tiga" << endl;
        }
        else if(n == 4) {
            cout<<"empat" << endl;
        }
        else if(n == 5) {
            cout<<"lima" << endl;
        }
        else if(n == 6) {
            cout<<"enam" << endl;;
        }
        else if(n == 7) {
            cout<<"tujuh" << endl;
        }
        else if(n == 8) {
            cout<<"delapan" << endl;
        }
        else if(n == 9){
            cout<<"sembilan" << endl;
        }
        
    }
}

Anda akan diberikan array N bilangan bulat dan Anda diminta mencetak bilangan bulat dalam urutan terbalik.
Format Input
Baris pertama input berisi N, di mana N adalah banyaknya bilangan bulat. Baris berikutnya berisi N bilangan bulat yang dipisahkan spasi.
Format Output
Cetak  N array bilangan bulat dalam urutan terbalik, dipisahkan oleh spasi dalam satu baris.
Constraint

1 < N < 1000
jawab:
#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;

    int arr[n];
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    for (int i = n-1; i >= 0; i--) {
        cout << arr[i] << " ";
    }

    return 0;
}

Buat fungsi dengan nama jarak untuk menghitung jarak antara dua titik (x1,y1) dan (x2,y2).
dimana rumus menghitung jarak adalah 

D = [( x2 – x1 )2 + (y2 – y1)2] 1/2

Constraint:
x1, x2, y1, y2 € Riil
Prototype Fungsi:

double jarak(double, double, double, double);
For example:
Test	Input	Result
cout<<jarak(0,0,3,4);
cout<<jarak(0,0,3,4);
5
jawab
#include <iostream>
#include <cmath> 

using namespace std;

double jarak(double x1, double y1, double x2, double y2) {
    double x = x2 - x1;
    double y = y2 - y1;
    double jarak = sqrt(pow(x, 2) + pow(y, 2));
    return jarak;
}

Buat fungsi void dengan nama findMax tanpa parameter, fungsi membaca input dari keyboard berupa integer N, dan N data.  Lalu fungsi akan mencetak nilai terbesar dari data yang diinputkan.

Format Input

Baris pertama berupa integer N
N Baris berikutnya merupakan data dengan tipe integer
Format Output

Output berupa nilai terbesar data yang diinputkan
For example:

Test	Input	Result
findMax();
4
3 2 1 12
12
jawab:
#include <iostream>
#include <climits>
using namespace std;

void findMax(){
    int N;
    cin >> N;

    int Max = INT_MIN;
    for (int i = 0; i < N; i++){
    	
        int num;
        cin >> num;
        if (num > Max){
            Max = num;
        }
    }
    cout << Max << endl;
}

Buat fungsi void dengan nama hitungRerata tanpa parameter, fungsi membaca input dari keyboard berupa integer N, dan N data.  Lalu fungsi akan mencetak nilai rata-rata dari data yang diinputkan.

Format Input

Baris pertama berupa integer N
N Baris berikutnya merupakan data dengan tipe pecahan
Format Output

Output berupa nilai rata-rata data yang diinputkan
For example:

Test	Input	Result
hitungRerata();
4
3 2 1 12
4.5
jawab
#include <iostream>
using namespace std;

void hitungRerata(){
    int n;
    double total = 0.0;
    cin >> n;

    for (int i = 0; i < n; i++){
        double data;
        cin >> data;
        total += data;
    }

    double RataRata = total / n;
	cout << RataRata;
}

Buat fungsi dengan nama fib yang memiliki 1 parameter integer, fungsi ini untuk menghitung bilangan fibonanci  f(n) = f(n-2) + f(n-1)
dimmana f(0) = 0, dan f(1) =1

Contoh 

fib(5) = f(3) + f(4)
f(4) = f(2) + f(1)
f(3) = f(1) + f(2)
f(2) = f(0) + f(1)
jawab:
#include <iostream>
using namespace std;

int fib(int n) {
    if (n == 0) {
        return 0;
    } else if (n == 1) {
        return 1;
    } else {
        return fib(n-2) + fib(n-1);
    }
}

Buatlah sebuah Program menghitung perkalian 2 matriks. Program harus bisa mengkalikan 2 matriks dengan kondisi kolom matriks ke-1 harus sama dengan baris matriks ke-2. Apabila kondisi tersebut tidak memenuhi maka akan mengeluarkan “Perkalian matriks tidak dapat dilakukan”.
Input: • Bilangan Integer apa saja 
Output: • Menampilkan hasil perkalian 2 matriks

For example:
Input	Result
5 4
12 4 23 7 15 3 23 40 11 2 5 12 3 16 3 7 8 10 23 6
4 5
1 2 3 6 4 10 4 7 11 2 4 10 22 13 16 10 20 19 16 15
214 410 703 527 529
537 1072 1332 1062 1034
171 320 385 345 308
245 240 320 345 197
260 406 714 553 510
3 4
2 4 11 6 5 8 7 2 3 5 4 10
2 6
10 2 4 5 1 3 4 11 2 42 12 9
#include<iostream>
using namespace std;

int main()
{
    int matriks1[10][10], matriks2[10][10], hasil[10][10];
    int baris1, kolom1, baris2, kolom2;

    cin >> baris1;
    cin >> kolom1;

    for(int i = 0; i < baris1; i++){
        for(int j = 0; j < kolom1; j++){
            cin >> matriks1[i][j];
        }
    }

    cin >> baris2;
    cin >> kolom2;

    if(kolom1 != baris2){
        cout << "Perkalian matriks tidak dapat dilakukan\n";
        return 0;
    }

    for(int i = 0; i < baris2; i++){
        for(int j = 0; j < kolom2; j++){
            cin >> matriks2[i][j];
        }
    }

    for(int i = 0; i < baris1; i++){
        for(int j = 0; j < kolom2; j++){
            hasil[i][j] = 0;
            for(int k = 0; k < kolom1; k++){
                hasil[i][j] += matriks1[i][k] * matriks2[k][j];
            }
        }
    }
    for(int i = 0; i < baris1; i++){
        for(int j = 0; j < kolom2; j++){
            cout << hasil[i][j] << " ";
        }
        cout << endl;
    }

    return 0;
}

Buatlah sebuah Fungsi menghitung baris dan deret aritmatika menggunakan Prosedur. Program memiliki dua buah prosedur dengan masing-masing memiliki tiga parameter yaitu nilai awal, selisih, dan jumlah suku. Bilangan dalam baris merupakan bilangan positif. Apabila terdapat bilangan negatif (kurang dari nol) dalam baris, program akan menampilkan “Not Found” lalu berhenti.

Input : 
- Input dapat berupa bilangan integer bernilai apa saja 
Output : 
- baris pertama menampilkan baris aritmatika dipisahkan spasi
 - baris kedua menampilkan deret aritmatika

For example:

Test	Input	Result
baris(4,2,8);
deret(4,2,8);
baris(4,2,8);
deret(4,2,8);
4 6 8 10 12 14 16 18
88
baris(0,5,6);
deret(0,5,6);
baris(0,5,6);
deret(0,5,6);
0 5 10 15 20 25
75
baris(-3,4,9);
deret(-3,4,9);
baris(-3,4,9);
deret(-3,4,9);
Not Found
jawab:
void deret(int a, int d, int n) {
    int has = (n*(2 * a + (n - 1) * d))/2;
    cout<<has;
}

void baris(int a, int d, int n) {
    int temp = 0;
    for (int i = 1; i <= n; i++) {
        temp = a + (i-1) * d;
        if(temp>=0){
        cout << temp << " ";
        }
        else{
        cout<<"Not Found";
        exit(0);
        }
    }
    cout << endl;
}

Buatlah Program yang memiliki Fungsi dengan nama jarak untuk menghitung jarak antara dua titik (x1,y1) dan (x2,y2). Fungsi tersebut memiliki satu parameter bertipe Float, dimana rumus menghitung jarak adalah D = [( x2 – x1 )^2 + (y2 – y1)^2 ]^1/2
For example:

Input	Result
0 0 3 4
5
23 24 21 28
5.83095
jawab:
#include <iostream>
#include <cmath>

using namespace std;

double jarak(double x1, double y1, double x2, double y2){
	double jarak = sqrt(pow((x1-y2), 2) + pow((x2-y1), 2));
	return jarak;
	
}

int main() {
	
	float x1, y1, x2, y2;
	
	cin >> x1;
	cin >> y1;
	cin >> x2;
	cin >> y2;
	
	cout << jarak(x1, y1, x2, y2);
	
}
Buatlah sebuah fungsi dengan nama vPtr. Fungsi ini memiliki 2 parameter:
1. Parameter pertama berupa void pointer yang nantinya akan diisi nilai integer ataupun char.
2. Parameter kedua adalah sebuah variabel char yang akan diisi dengan tipe perintah.

Ketentuan:
1. Parameter char pada fungsi ini hanya akan diisi dengan huruf i atau c
2. Jika char berisi huruf "i" maka pointer akan berisi sebuah integer, maka tampilkan 'ing' sebanyak nilai dalam pointer.
3. Jika char berisi hurf "c" maka pointer akan berisi sebuah char, maka tampilkan 'ceng' diikuti karakter yang ada pada pointer dipisahkan dengan spasi
void vPtr(void* p, char type)
{
    if (type == 'i')
    {
        for (int i = 0; i < *(int *)p;i++) {
            cout << "ing" << endl;
        }
    }
    else if (type == 'c')
    {
        cout << "ceng " << *(char*)p << endl;
    }
}

/* 	Nama 	: Rizki Mahesa
	Npm		: 2217051101
	Kelas	: B
*/
#include <iostream>
#include <fstream>
using namespace std;

int main() {
	string teks[4];
	
	for(int i = 0; i < 4; i++) {
		cin >> teks[i];
	}	
	ofstream readFile("barang.txt");	
	for(int i = 0; i < 4; i++) {
		readFile << teks[i] << endl;	
	}	
}
