//blangan terbesar
#include <iostream> 

using namespace std;

#define MAX(a,b) (a>b?a:b)

int main () {

	int a = 7, b = 3;

	cout << MAX (a,b);

}

//deret baris
#include <iostream> 

using namespace std;

void baris (int a, int b, int c) {
	for (int i = 0; i < c; i++) {
		int baris = a + i*b;
		if (baris < 0) {
			cout << "Not Found" <<endl;
			return;
		} cout << baris << " " ;
	} cout << endl;
}

void deret (int a, int b, int c) {
	int jumlah = 0;
	for (int i = 0; i < c; i++) {
		int baris = a + i*b;
		if (baris < 0) {
			return;
		} jumlah += baris;
	} cout << jumlah;
}

int main () {
	baris (0,2,8);
	deret (0,2,8);
}

//fungsirekrusif
#include <iostream>

using namespace std;

int pangkat (int a, int b) {

	if (b == 0) {

		return 1;

	} else {

		return pangkat (a, b-1) * a;

	}

}
int main () {
	int a = 3, b = 7;
	cout << pangkat (a,b);

}

menghitung jarak
#include <iostream> 
#include <cmath>

using namespace std;

float jarak (float x1, float y1, float x2, float y2) {
	return sqrt (pow((x2 - x1), 2) + pow ((y2-y1),2));
}

int main () {
	float x1, y1, x2, y2;
	cin >> x1 >> y1 >> x2 >> y2;
	cout << jarak (x1,y1,x2,y2);
}

//perkalian matriks 3x3
#include <iostream> 

using namespace std;

int main () {
	int a1, b1, a2, b2, jumlah = 0;
	
	cin >> a1 >> b1;
	int matriks1 [a1][b1];
	
	for (int i = 0; i < a1; i++) {
		for (int j = 0; j < b1; j++) {
			cin >> matriks1 [i][j];
		}
	}
	
	cin >> a2 >> b2;
	int matriks2 [a2][b2];
	
	for (int i = 0; i < a2; i++) {
		for (int j = 0; j < b2; j++) {
			cin >> matriks2 [i][j];
		}
	}
	
	if (b1 == a2) {
		int final [a1][b2];
		for (int i = 0; i < a1; i++) {
			for (int j = 0; j < b2; j++) {
				for (int k = 0; k < a2; k++) {
					jumlah = jumlah + matriks1 [i][k] * matriks2 [k][j];
				}
				final [i][j] = jumlah;
				jumlah = 0;
			}
		}
		
		for (int i = 0; i < a1; i++) {
			for (int j = 0; j < b2; j++) {
			cout << final [i][j] << " ";
			} cout << endl;
		}
	} else {
		cout << "Perkalian matriks tidak dapat dilakukan";
	}
}

//prosedur absen
# include<iostream>

using namespace std;

void Absen (string nama, unsigned long npm){
    cout << nama << " " << npm;
}

int main (){
    string nama;
    unsigned long npm;

    getline(cin, nama);
    cin >> npm;

    Absen(nama,npm);

    return 0;
}

//void pointer
#include <iostream>

using namespace std;

void vPtr (void* x, char y) {
	if (y == 'i') {
		int* a = (int*) x;
		for (int i = 0; i < a; i++) {
			cout << "ing" << endl;
		}
	} else if (y == 'c') {
		char* b = (char*) x;
		cout << "ceng " << b;
	}
}

int main () {
	int c = 5;
	void* x = &c;
	vPtr (x,'i');
}
